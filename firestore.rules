/**
 * @file Firestore Security Rules
 * @core-philosophy This ruleset allows any signed-in user (even anonymously) to create error reports under a public collection grouped by `appId`. All error reports are publicly readable.
 * @data-structure All error reports are stored under `/artifacts/{appId}/public/data/error_reports/{errorReportId}`. The `appId` allows for separation of error reports from different applications if needed.
 * @key-security-decisions All authenticated users can create, read, update, and delete error reports.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows any signed-in user to create, read, update, and delete error reports under a public collection grouped by `appId`.
     * @path /artifacts/{appId}/public/data/error_reports/{errorReportId}
     * @allow (create) - Any signed-in user can create an error report with a unique ID.
     * @allow (get) - Any user can retrieve an error report.
     * @allow (list) - Any user can list error reports.
     * @allow (update) - Any signed-in user can update an existing error report.
     * @allow (delete) - Any signed-in user can delete an existing error report.
     * @deny (create) - An unauthenticated user cannot create an error report.
     * @principle Allows any authenticated user (even anonymously) to create, read, update, and delete error reports under a public collection grouped by `appId`.
     */
    match /artifacts/{appId}/public/data/error_reports/{errorReportId} {
      allow get, list: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && resource != null;
      allow delete: if isSignedIn() && resource != null;
    }

    // Define helper functions
    function isSignedIn() {
      return request.auth != null;
    }
  }
}