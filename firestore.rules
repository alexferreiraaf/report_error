/**
 * @fileOverview This ruleset governs access to error reports stored in Firestore.
 *
 * Core Philosophy:
 *   This ruleset allows any authenticated user (including anonymous) to create, read, and list error reports.
 *   Update and delete operations are disallowed. This is a public read, append-only collection.
 *
 * Data Structure:
 *   Error reports are stored under `/artifacts/{appId}/public/data/error_reports/{errorReportId}`.
 *   The `appId` allows for separating reports from different applications.
 *
 * Key Security Decisions:
 *   - Anonymous users are allowed to create error reports, reflecting the "anyone can submit" requirement.
 *   - Listing error reports is allowed for all users.
 *   - Update and Delete operations are denied to all users to make the reports append-only.
 *
 * Denormalization for Authorization:
 *   None needed. The rules rely on the implicit relationship established by the Firestore path.
 *
 * Structural Segregation:
 *   All error reports, regardless of the submitter, are stored in the same collection.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Controls access to error reports. Allows authenticated users to create, read, and list error reports. Update and delete are forbidden.
     * @path /artifacts/{appId}/public/data/error_reports/{errorReportId}
     * @allow (create) - Any authenticated user can create a new error report.
     *   Request: { "auth": { "uid": "user123" }, "resource": { "data": { "id": "report456", "clientName": "Acme Corp", "technicianName": "John Doe", "errorDate": "2024-01-01T12:00:00Z", "reportText": "Failed to load module.", "reportedByUserId": "user123", "generatedAt": "2024-01-01T12:00:00Z" } } }
     * @allow (get, list) - Any user can read any error report.
     *   Request: { "auth": { "uid": "user123" } }
     * @deny (update) - No user can update an error report.
     *   Request: { "auth": { "uid": "user123" }, "resource": { "data": { "id": "report456", "clientName": "Acme Corp", "technicianName": "John Doe", "errorDate": "2024-01-01T12:00:00Z", "reportText": "Updated error description.", "reportedByUserId": "user123", "generatedAt": "2024-01-01T12:00:00Z" } } }
     * @deny (delete) - No user can delete an error report.
     *   Request: { "auth": { "uid": "user123" } }
     * @principle Allows any authenticated user to create reports, but restricts updates and deletes. Provides public read access to all error reports.
     */
    match /artifacts/{appId}/public/data/error_reports/{errorReportId} {
      allow get, list: if true;
      allow create: if isSignedIn();
      allow update, delete: if false;
    }

    /**
     * @description Placeholder match for /users/{userId} to deny all access.
     * @path /users/{userId}
     * @allow None
     * @deny create, get, list, update, delete.  All operations are denied.
     * @principle This collection is not used, so all access is denied.
     */
     match /users/{userId} {
        allow get: if false;
        allow list: if false;
        allow create: if false;
        allow update: if false;
        allow delete: if false;
    }


    function isSignedIn() {
      return request.auth != null;
    }
  }
}