{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/definitions.ts"],"sourcesContent":["import { z } from 'zod';\n\nconst MAX_FILE_SIZE = 25 * 1024 * 1024; // 25MB\nconst ACCEPTED_MEDIA_TYPES = [\n  \"image/jpeg\",\n  \"image/jpg\",\n  \"image/png\",\n  \"image/webp\",\n  \"image/gif\",\n  \"video/mp4\",\n  \"video/quicktime\",\n  \"video/webm\",\n];\nconst ACCEPTED_ZIP_TYPES = [\"application/zip\", \"application/x-zip-compressed\"];\n\nconst fileSchema = z\n  .any()\n  .refine((file) => file?.size, { message: 'Arquivo é obrigatório' })\n  .refine((file) => file.size <= MAX_FILE_SIZE, `O tamanho máximo do arquivo é 25MB.`)\n  .optional()\n  .nullable();\n\nexport const reportSchema = z.object({\n  clientName: z.string().min(1, 'Nome do cliente é obrigatório.'),\n  technicianName: z.string().min(1, 'Nome do técnico é obrigatório.'),\n  errorDate: z.string().min(1, 'Data do erro é obrigatória.'),\n  reportText: z.string().min(1, 'O relatório detalhado é obrigatório.'),\n  mediaFile: fileSchema.refine(\n    (file) => !file || ACCEPTED_MEDIA_TYPES.includes(file.type),\n    'Apenas formatos de imagem e vídeo são aceitos.'\n  ),\n  zipFile: fileSchema.refine(\n    (file) => !file || ACCEPTED_ZIP_TYPES.includes(file.type),\n    'Apenas arquivos .zip são aceitos.'\n  ),\n  reportedByUserId: z.string(),\n}).refine(\n  (data) => data.mediaFile || data.zipFile, {\n    message: 'É necessário anexar pelo menos um arquivo (Foto/Vídeo ou Arquivo Zipado).',\n    path: ['mediaFile'], // show error under media file input\n});\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,gBAAgB,KAAK,OAAO,MAAM,OAAO;AAC/C,MAAM,uBAAuB;IAC3B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AACD,MAAM,qBAAqB;IAAC;IAAmB;CAA+B;AAE9E,MAAM,aAAa,oIAAA,CAAA,IAAC,CACjB,GAAG,GACH,MAAM,CAAC,CAAC,OAAS,MAAM,MAAM;IAAE,SAAS;AAAwB,GAChE,MAAM,CAAC,CAAC,OAAS,KAAK,IAAI,IAAI,eAAe,CAAC,mCAAmC,CAAC,EAClF,QAAQ,GACR,QAAQ;AAEJ,MAAM,eAAe,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACnC,YAAY,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC9B,gBAAgB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAClC,WAAW,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC7B,YAAY,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC9B,WAAW,WAAW,MAAM,CAC1B,CAAC,OAAS,CAAC,QAAQ,qBAAqB,QAAQ,CAAC,KAAK,IAAI,GAC1D;IAEF,SAAS,WAAW,MAAM,CACxB,CAAC,OAAS,CAAC,QAAQ,mBAAmB,QAAQ,CAAC,KAAK,IAAI,GACxD;IAEF,kBAAkB,oIAAA,CAAA,IAAC,CAAC,MAAM;AAC5B,GAAG,MAAM,CACP,CAAC,OAAS,KAAK,SAAS,IAAI,KAAK,OAAO,EAAE;IACxC,SAAS;IACT,MAAM;QAAC;KAAY;AACvB","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase-admin.ts"],"sourcesContent":["import admin from 'firebase-admin';\n\nif (!admin.apps.length) {\n  try {\n    const serviceAccountKeyBase64 = process.env.FIREBASE_SERVICE_ACCOUNT_KEY_BASE64;\n    if (!serviceAccountKeyBase64) {\n      throw new Error('FIREBASE_SERVICE_ACCOUNT_KEY_BASE64 environment variable is not set.');\n    }\n    \n    const serviceAccount = JSON.parse(\n      Buffer.from(serviceAccountKeyBase64, 'base64').toString('utf8')\n    );\n\n    admin.initializeApp({\n      credential: admin.credential.cert(serviceAccount),\n      storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET\n    });\n  } catch (error) {\n    console.error('Firebase admin initialization error', error);\n  }\n}\n\nexport const adminDb = admin.firestore();\nexport const adminStorage = admin.storage();\n"],"names":[],"mappings":";;;;AAAA;;AAEA,IAAI,CAAC,2HAAA,CAAA,UAAK,CAAC,IAAI,CAAC,MAAM,EAAE;IACtB,IAAI;QACF,MAAM,0BAA0B,QAAQ,GAAG,CAAC,mCAAmC;QAC/E,IAAI,CAAC,yBAAyB;YAC5B,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,iBAAiB,KAAK,KAAK,CAC/B,OAAO,IAAI,CAAC,yBAAyB,UAAU,QAAQ,CAAC;QAG1D,2HAAA,CAAA,UAAK,CAAC,aAAa,CAAC;YAClB,YAAY,2HAAA,CAAA,UAAK,CAAC,UAAU,CAAC,IAAI,CAAC;YAClC,eAAe,QAAQ,GAAG,CAAC,mCAAmC;QAChE;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uCAAuC;IACvD;AACF;AAEO,MAAM,UAAU,2HAAA,CAAA,UAAK,CAAC,SAAS;AAC/B,MAAM,eAAe,2HAAA,CAAA,UAAK,CAAC,OAAO","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["'use server';\n\nimport { z } from 'zod';\nimport { reportSchema } from '@/lib/definitions';\nimport { adminDb, adminStorage } from '@/lib/firebase-admin';\nimport { FieldValue } from 'firebase-admin/firestore';\nimport { revalidatePath } from 'next/cache';\n\nexport type FormState = {\n  success: boolean;\n  message: string;\n  errors?: {\n    [key: string]: string[] | undefined;\n  };\n};\n\nasync function uploadFile(\n  file: File,\n  folder: string\n): Promise<string | null> {\n  if (!file || file.size === 0) return null;\n\n  const bucket = adminStorage.bucket();\n  const uniqueId = Date.now();\n  const filePath = `error_reports/${folder}/${uniqueId}_${file.name}`;\n  const fileRef = bucket.file(filePath);\n\n  const buffer = Buffer.from(await file.arrayBuffer());\n\n  await fileRef.save(buffer, {\n    metadata: {\n      contentType: file.type,\n    },\n  });\n\n  // Firebase Storage public URL format\n  // Note: This requires your Storage rules to allow public reads.\n  // A more secure method involves signed URLs if files are sensitive.\n  const publicUrl = `https://storage.googleapis.com/${bucket.name}/${filePath}`;\n  \n  return publicUrl;\n}\n\nexport async function submitReport(\n  prevState: FormState | null,\n  formData: FormData\n): Promise<FormState> {\n  try {\n    const validatedFields = reportSchema.safeParse({\n      clientName: formData.get('clientName'),\n      technicianName: formData.get('technicianName'),\n      errorDate: formData.get('errorDate'),\n      reportText: formData.get('reportText'),\n      mediaFile: formData.get('mediaFile'),\n      zipFile: formData.get('zipFile'),\n      reportedByUserId: formData.get('reportedByUserId'),\n    });\n\n    if (!validatedFields.success) {\n      return {\n        success: false,\n        message: 'Falha na validação. Verifique os campos.',\n        errors: validatedFields.error.flatten().fieldErrors,\n      };\n    }\n\n    const {\n      clientName,\n      technicianName,\n      errorDate,\n      reportText,\n      mediaFile,\n      zipFile,\n      reportedByUserId,\n    } = validatedFields.data;\n\n    const mediaUrl = await uploadFile(mediaFile as File, 'midia');\n    const zipUrl = await uploadFile(zipFile as File, 'banco_de_dados');\n\n    const appId = process.env.NEXT_PUBLIC_FIREBASE_APP_ID;\n    if (!appId) {\n      throw new Error('Firebase App ID is not configured.');\n    }\n    const reportsCollectionRef = adminDb.collection(\n      `artifacts/${appId}/public/data/error_reports`\n    );\n\n    await reportsCollectionRef.add({\n      clientName,\n      technicianName,\n      errorDate,\n      reportText,\n      mediaUrl: mediaUrl || null,\n      zipUrl: zipUrl || null,\n      reportedByUserId,\n      generatedAt: FieldValue.serverTimestamp(),\n    });\n\n    revalidatePath('/');\n    return {\n      success: true,\n      message: '✅ Relatório de erro enviado com sucesso!',\n    };\n  } catch (e: unknown) {\n    const error = e as Error;\n    console.error('Erro ao enviar relatório:', error);\n    return {\n      success: false,\n      message: `Falha ao enviar o relatório. Erro: ${error.message}`,\n    };\n  }\n}\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AACA;;;;;;;;;;;;AAUA,eAAe,WACb,IAAU,EACV,MAAc;IAEd,IAAI,CAAC,QAAQ,KAAK,IAAI,KAAK,GAAG,OAAO;IAErC,MAAM,SAAS,+HAAA,CAAA,eAAY,CAAC,MAAM;IAClC,MAAM,WAAW,KAAK,GAAG;IACzB,MAAM,WAAW,CAAC,cAAc,EAAE,OAAO,CAAC,EAAE,SAAS,CAAC,EAAE,KAAK,IAAI,EAAE;IACnE,MAAM,UAAU,OAAO,IAAI,CAAC;IAE5B,MAAM,SAAS,OAAO,IAAI,CAAC,MAAM,KAAK,WAAW;IAEjD,MAAM,QAAQ,IAAI,CAAC,QAAQ;QACzB,UAAU;YACR,aAAa,KAAK,IAAI;QACxB;IACF;IAEA,qCAAqC;IACrC,gEAAgE;IAChE,oEAAoE;IACpE,MAAM,YAAY,CAAC,+BAA+B,EAAE,OAAO,IAAI,CAAC,CAAC,EAAE,UAAU;IAE7E,OAAO;AACT;AAEO,eAAe,aACpB,SAA2B,EAC3B,QAAkB;IAElB,IAAI;QACF,MAAM,kBAAkB,yHAAA,CAAA,eAAY,CAAC,SAAS,CAAC;YAC7C,YAAY,SAAS,GAAG,CAAC;YACzB,gBAAgB,SAAS,GAAG,CAAC;YAC7B,WAAW,SAAS,GAAG,CAAC;YACxB,YAAY,SAAS,GAAG,CAAC;YACzB,WAAW,SAAS,GAAG,CAAC;YACxB,SAAS,SAAS,GAAG,CAAC;YACtB,kBAAkB,SAAS,GAAG,CAAC;QACjC;QAEA,IAAI,CAAC,gBAAgB,OAAO,EAAE;YAC5B,OAAO;gBACL,SAAS;gBACT,SAAS;gBACT,QAAQ,gBAAgB,KAAK,CAAC,OAAO,GAAG,WAAW;YACrD;QACF;QAEA,MAAM,EACJ,UAAU,EACV,cAAc,EACd,SAAS,EACT,UAAU,EACV,SAAS,EACT,OAAO,EACP,gBAAgB,EACjB,GAAG,gBAAgB,IAAI;QAExB,MAAM,WAAW,MAAM,WAAW,WAAmB;QACrD,MAAM,SAAS,MAAM,WAAW,SAAiB;QAEjD,MAAM,QAAQ,QAAQ,GAAG,CAAC,2BAA2B;QACrD,IAAI,CAAC,OAAO;YACV,MAAM,IAAI,MAAM;QAClB;QACA,MAAM,uBAAuB,+HAAA,CAAA,UAAO,CAAC,UAAU,CAC7C,CAAC,UAAU,EAAE,MAAM,0BAA0B,CAAC;QAGhD,MAAM,qBAAqB,GAAG,CAAC;YAC7B;YACA;YACA;YACA;YACA,UAAU,YAAY;YACtB,QAAQ,UAAU;YAClB;YACA,aAAa,4JAAA,CAAA,aAAU,CAAC,eAAe;QACzC;QAEA,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,OAAO;YACL,SAAS;YACT,SAAS;QACX;IACF,EAAE,OAAO,GAAY;QACnB,MAAM,QAAQ;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO;YACL,SAAS;YACT,SAAS,CAAC,mCAAmC,EAAE,MAAM,OAAO,EAAE;QAChE;IACF;AACF;;;IApEsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {submitReport as '60f6ce0a3d9c65d38cd2cefd5ae44f0533d5cc996a'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/error-report-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ErrorReportForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call ErrorReportForm() from the server but ErrorReportForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/error-report-form.tsx <module evaluation>\",\n    \"ErrorReportForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,sEACA","debugId":null}},
    {"offset": {"line": 286, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/error-report-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ErrorReportForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call ErrorReportForm() from the server but ErrorReportForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/error-report-form.tsx\",\n    \"ErrorReportForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,kDACA","debugId":null}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 310, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/theme-toggle.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ThemeToggle = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeToggle() from the server but ThemeToggle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/theme-toggle.tsx <module evaluation>\",\n    \"ThemeToggle\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,iEACA","debugId":null}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/theme-toggle.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ThemeToggle = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeToggle() from the server but ThemeToggle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/theme-toggle.tsx\",\n    \"ThemeToggle\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,6CACA","debugId":null}},
    {"offset": {"line": 338, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 348, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 364, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 445, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["import { ErrorReportForm } from '@/components/error-report-form';\nimport { ThemeToggle } from '@/components/theme-toggle';\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent } from '@/components/ui/card';\n\nexport default function Home() {\n  return (\n    <div className=\"relative min-h-screen flex items-center justify-center p-4\">\n      <ThemeToggle />\n      <main className=\"w-full max-w-2xl\">\n        <Card className=\"shadow-2xl\">\n          <CardHeader className=\"border-b\">\n            <CardTitle className=\"text-3xl font-extrabold text-primary\">\n              Relatório de Erros do Sistema\n            </CardTitle>\n            <CardDescription className=\"pt-1\">\n              Preencha as informações para registrar um novo erro de cliente.\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"pt-6\">\n            <ErrorReportForm />\n          </CardContent>\n        </Card>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,qIAAA,CAAA,cAAW;;;;;0BACZ,8OAAC;gBAAK,WAAU;0BACd,cAAA,8OAAC,gIAAA,CAAA,OAAI;oBAAC,WAAU;;sCACd,8OAAC,gIAAA,CAAA,aAAU;4BAAC,WAAU;;8CACpB,8OAAC,gIAAA,CAAA,YAAS;oCAAC,WAAU;8CAAuC;;;;;;8CAG5D,8OAAC,gIAAA,CAAA,kBAAe;oCAAC,WAAU;8CAAO;;;;;;;;;;;;sCAIpC,8OAAC,gIAAA,CAAA,cAAW;4BAAC,WAAU;sCACrB,cAAA,8OAAC,6IAAA,CAAA,kBAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;AAM5B","debugId":null}}]
}